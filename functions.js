const events = require("./events");

function getDaysUntilEvent(event) {
   const today = new Date();
   const nextEvent = new Date(event);
   nextEvent.setFullYear(today.getFullYear());

   // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ 00:00:00 –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
   today.setHours(0, 0, 0, 0);
   nextEvent.setHours(0, 0, 0, 0);

   if (nextEvent < today) {
      nextEvent.setFullYear(today.getFullYear() + 1);
   }

   const diffTime = nextEvent - today;
   return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è
function getBirthdaysMessage() {
   let eventsList = events
      .filter(item => item.type === "birthday")
      .map(item => ({
         ...item,
         daysUntil: getDaysUntilEvent(item.date)
      }))
      .sort((a, b) => a.daysUntil - b.daysUntil);

   let message = "";
   eventsList.forEach((item) => {
      if (item.daysUntil === 0) {
         message += `üéâ ${item.name}: –°–ï–ì–û–î–ù–Ø –î–ï–ù–¨ –†–û–ñ–î–ï–ù–ò–Ø! üéâ\n`;
      } else if (item.daysUntil === 1) {
         message += `${item.name}: ${item.daysUntil} –¥–µ–Ω—å\n`;
      } else if (item.daysUntil >= 2 && item.daysUntil <= 4) {
         message += `${item.name}: ${item.daysUntil} –¥–Ω—è\n`;
      } else {
         message += `${item.name}: ${item.daysUntil} –¥–Ω–µ–π\n`;
      }
   });
   return message;
}

module.exports = { getDaysUntilEvent, getBirthdaysMessage };
